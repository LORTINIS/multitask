# -*- coding: utf-8 -*-
"""Compiling_Datasets

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uz_4ANN9HXwOOcN6ftUnfXDWy0jAl0JU
"""

from google.colab import drive
drive.mount('/content/drive')

#@title --- WINE DATA COMPILATION SCRIPT ---
# Combines all AQ, HQ, and LQ .txt files into one clean aggregated CSV

import os
import pandas as pd
import numpy as np

# --- CONFIG ---
base_path = "/content/drive/MyDrive/Wine Dataset"  # adjust path to your folder
output_csv = "wine_dataset_compiled.csv"
stabilization_period = 500  # number of rows to skip from start

# --- Helper function ---
def load_wine_dataset(base_path):
    folders = ["AQ_Wines", "HQ_Wines", "LQ_Wines"]
    ts_columns = [
        "Rel_Humidity (%)", "Temperature (C)",
        "MQ-3_R1 (kOhm)", "MQ-4_R1 (kOhm)", "MQ-6_R1 (kOhm)",
        "MQ-3_R2 (kOhm)", "MQ-4_R2 (kOhm)", "MQ-6_R2 (kOhm)"
    ]

    all_data = []
    for folder in folders:
        folder_path = os.path.join(base_path, folder)
        quality_label = folder.split("_")[0]  # AQ, HQ, LQ

        for file in os.listdir(folder_path):
            if not file.endswith(".txt"):
                continue
            file_path = os.path.join(folder_path, file)
            df = pd.read_csv(file_path, sep=r"\s+", header=None, names=ts_columns)

            # Drop stabilization period
            if len(df) > stabilization_period:
                df = df.iloc[stabilization_period:]

            # Store metadata
            df["Quality_Label"] = quality_label
            df["Filename"] = file
            all_data.append(df)

    df_all = pd.concat(all_data, ignore_index=True)

    # Aggregate stats per file
    sensor_cols = [
        "MQ-3_R1 (kOhm)", "MQ-4_R1 (kOhm)", "MQ-6_R1 (kOhm)",
        "MQ-3_R2 (kOhm)", "MQ-4_R2 (kOhm)", "MQ-6_R2 (kOhm)"
    ]

    aggregated = []
    for fname in df_all["Filename"].unique():
        df_file = df_all[df_all["Filename"] == fname]
        entry = {"Filename": fname, "Quality_Label": df_file["Quality_Label"].iloc[0]}
        for col in sensor_cols:
            entry[f"{col}_mean"] = df_file[col].mean()
            entry[f"{col}_std"] = df_file[col].std()
            entry[f"{col}_min"] = df_file[col].min()
            entry[f"{col}_max"] = df_file[col].max()
            entry[f"{col}_median"] = df_file[col].median()
        aggregated.append(entry)

    df_agg = pd.DataFrame(aggregated)
    return df_agg


# --- Run and save ---
wine_df = load_wine_dataset(base_path)
wine_df.to_csv(output_csv, index=False)
print(f"✅ Compiled wine dataset saved to '{output_csv}' with shape {wine_df.shape}")

#@title --- ETHANOL DATA COMPILATION SCRIPT ---
# Combines all ethanol .txt files into one clean aggregated CSV

import os
import pandas as pd
import numpy as np

# --- CONFIG ---
base_path = "/content/drive/MyDrive/Wine Dataset/Ethanol"  # adjust to Ethanol folder
output_csv = "ethanol_dataset_compiled.csv"
stabilization_period = 500  # number of rows to skip from start

ethanol_concentration_map = {
    "C1": "1%", "C2": "2.5%", "C3": "5%",
    "C4": "10%", "C5": "15%", "C6": "20%"
}

ts_columns = [
    "Rel_Humidity (%)", "Temperature (C)",
    "MQ-3_R1 (kOhm)", "MQ-4_R1 (kOhm)", "MQ-6_R1 (kOhm)",
    "MQ-3_R2 (kOhm)", "MQ-4_R2 (kOhm)", "MQ-6_R2 (kOhm)"
]

all_data = []

for file in os.listdir(base_path):
    if not file.endswith(".txt"):
        continue

    file_path = os.path.join(base_path, file)
    df = pd.read_csv(file_path, sep=r"\s+", header=None, names=ts_columns)

    # Drop stabilization period
    if len(df) > stabilization_period:
        df = df.iloc[stabilization_period:]

    # Extract concentration label
    conc_code = file[3:5]  # e.g., C1, C2, etc.
    concentration = ethanol_concentration_map.get(conc_code, "Unknown")

    df["Concentration_Label"] = concentration
    df["Filename"] = file
    all_data.append(df)

# Combine all data
df_all = pd.concat(all_data, ignore_index=True)

# Aggregate stats per file
sensor_cols = [
    "MQ-3_R1 (kOhm)", "MQ-4_R1 (kOhm)", "MQ-6_R1 (kOhm)",
    "MQ-3_R2 (kOhm)", "MQ-4_R2 (kOhm)", "MQ-6_R2 (kOhm)"
]

aggregated = []
for fname in df_all["Filename"].unique():
    df_file = df_all[df_all["Filename"] == fname]
    entry = {"Filename": fname, "Concentration_Label": df_file["Concentration_Label"].iloc[0]}
    for col in sensor_cols:
        entry[f"{col}_mean"] = df_file[col].mean()
        entry[f"{col}_std"] = df_file[col].std()
        entry[f"{col}_min"] = df_file[col].min()
        entry[f"{col}_max"] = df_file[col].max()
        entry[f"{col}_median"] = df_file[col].median()
    aggregated.append(entry)

df_agg = pd.DataFrame(aggregated)
df_agg.to_csv(output_csv, index=False)
print(f"✅ Compiled ethanol dataset saved to '{output_csv}' with shape {df_agg.shape}")